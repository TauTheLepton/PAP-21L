//entity Category{
  //categoryName String
//}

enum Category{
  RECREATION, STUDYING, SPORTS
}

enum YesNo{
  YES, NO
}

enum TimeUnits{
  DAYS, WEEKS, MONTHS, YEARS
}

entity Event {
  eventName String required
  eventDate LocalDate required
  howManyInstances Long min(1) required
  cycleLength Long min(1)
  cycleUnit TimeUnits
  category Category
  login String required
}

entity PublicEvent {
  eventName String required
  eventDate LocalDate required
  howManyInstances Long min(1) required
  cycleLength Long min(1)
  cycleUnit TimeUnits
  category Category
}


//relationship OneToOne {
	//Event{category} to Category
//}

//relationship ManyToMany {
	//Job{task(title)} to Task{job}
//}

// defining multiple OneToMany relationships with comments
//relationship OneToMany {
	//Employee to Job{employee},
	/**
	* A relationship
	*/
	//Department to
	/**
	* Another side of the same relationship
	*/
	//Employee{department}
//}

//relationship ManyToOne {
	//Employee{manager} to Employee
//}

// defining multiple oneToOne relationships
//relationship OneToOne {
	//JobHistory{job} to Job,
	//JobHistory{department} to Department,
	//JobHistory{employee} to Employee
//}

// Set pagination options
//paginate JobHistory, Employee with infinite-scroll
//paginate Job with pagination
//paginate Event with infinite-scroll
//paginate Category with pagination

// Use Data Transfer Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
// service all with serviceImpl // except Category

// Set an angular suffix
// angularSuffix * with mySuffix